schema
  @core(feature: "https://specs.apollo.dev/core/v0.1"),
  @core(feature: "https://specs.apollo.dev/join/v0.1")
{
  query: Query
}

directive @core(feature: String!) repeatable on SCHEMA

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet) on FIELD_DEFINITION

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on OBJECT | INTERFACE

directive @join__owner(graph: join__Graph!) on OBJECT | INTERFACE

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

scalar join__FieldSet

enum join__Graph {
  PRODUCT @join__graph(name: "product" url: "http://base:8080")
  COMPANY @join__graph(name: "company" url: "http://base:8080")
  PERSON @join__graph(name: "person" url: "http://base:8080")
}

type Query {
  product(id: ID!): Product @join__field(graph: PRODUCT)
}

type Product {
  id: ID!
  manufacturer: Company!
  countryOfOrigin: Country!
  inStock: Boolean!
}

type Company
  @join__owner(graph: COMPANY)
  @join__type(graph: COMPANY, key: "id")
  @join__type(graph: PRODUCT, key: "id")
{
  id: ID! @join__field(graph: COMPANY)
  name: String! @join__field(graph: COMPANY)
  owner: Person! @join__field(graph: COMPANY)
}

type Person
  @join__owner(graph: PERSON)
  @join__type(graph: PERSON, key: "id")
  @join__type(graph: COMPANY, key: "id")
{
  id: ID! @join__field(graph: PERSON)
  name: String! @join__field(graph: PERSON)
}

type Country
{
  id: ID!
  name: String!
}
